<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABe
        DwAAAk1TRnQBSQFMAgEBAgEAASABAAEgAQABHgEAAR4BAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABeAMAAR4DAAEBAQABCAUAARABDhgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/CgAB/wHxARwBcgFJ
        AiIBSQFyARwB8QH/CgAB/wHwAewB6g0SAW0B7wH0TAAB/wEHAUkKKAFJAQcB/wcAAf8B9w8SAW0B6gES
        AW0B80oAAfABSQMoAS4GTwEuAygBSQHwBgAB8A4SAesB8wEAAf8BvAESAesB/0cAAf8B9wEhASgBLgFP
        AlAGlwJQAU8BLgEoASEB9wH/BAAB7A4SAfMEAAHvARIB8kYAAf8B7AEoAS4BTwFQAVYCeAaYAngBVgFQ
        AU8BLgEoAewB/wMAAe8C9wHtARIB6wn3Af8EAAHxARIBvEYAAfcBKAEuAU8BUAGXAXgBmAGfAZgFcgKY
        AXgBlwFQAU8BLgEoAfcGAAHzARIB7w4AAfEBEgG8RQAB8AEoAS4BTwFWAXgBmAGeAp8BSQFyA+wBcgFJ
        AZ8BngGYAXgBVgFPAS4BKAHwBQAB8wESAe8BAAH0ChkB8wEAAfEBEgG8RAAB/wFJAS4BTwFWAZcBmAGe
        A58BSQHyA/8B8AFJAp8BngGYAZcBVgFPAS4BSQH/BAAB8wESAe8BAAH0CgkBGQEAAfEBEgG8RAABBwEo
        AS4BVgGXAXgFngFJAfID/wHwAUkEngF4AZcBVgEuASgBBwQAAfMBEgHvAQAB8woJARkBAAHxARIBvEMA
        Af8BSQEuAVUBVgF4AZgFngFJAfID/wHwAUkEngGYAXgBVgFVAS4BSQH/AwAB8wESAe8BAAH0ChkB8wEA
        AfEBEgG8QwAB8QEoATQCVgF4AX0FngFJAfID/wHwAUkEngF9AXgCVgE0ASgB8QMAAfMBEgHvDgAB8QES
        AbxDAAEcAS4BVQFWAZcBeAGXBUkBIgHzA/8B8QEiBUkClwFWAVUBLgEcAwAB8wESAe8IAAH/BQAB8QES
        AbxDAAFyAVUCVgGXAXgBUAFyBPAB8QX/AfEE8AFyAVABlwJWAVUBcgMAAfMBEgHvBAAB/wHzARoCdQUA
        AfEBEgG8QwABSQNWAZcBeAFQAewP/wHsAVABlwNWAUkDAAHzARIB7wMAAvQBdQJNARoFAAHxARIBvEMA
        ASIEVgGXAU8B7A//AewBUARWASIDAAHzARIBBwIAARoBlAL/ARoBTQHzBQAB8QESAbxDAAEiBVYBTwHs
        D/8B7AFPBFYBIgMAAfMB9wH/AQABGgF1AfYBdQFTAf8BTQH/BQAB8QESAbxDAAFJApcDVgFPAXIE8gHz
        Bf8B8wTyAXIBTwJWApcBSQMAAv8BAAEaAZQB9gF1AU0BmgL/BgAB8QESAbxDAAFyAZcBeANWAU8FKAEi
        AfMD/wHxASIFKAFPAlYBeAGXAXIFAAEaAZoB9gF1AU0BmgH2AXUB/wYAAfEBEgG8QwABHAFQAXgBlwJW
        BlUBKAHyA/8B8AEoBVUCVgGXAXgBUAEcAwAB/wEaAZoB9gF1AU0BmgH2AXUBGwcAAfEBEgG8QwAB8QFJ
        AngCVgFVBTQBKAHyA/8B8AEoBDQBVQJWAngBSQHxAgAB/wKaAfYBdQFNAZoB9gF1ARsIAAHxARIBvEMA
        Af8BSQJ4AZcBVgFVBTQBKAHyA/8B8AEoBDQBVQFWAZcCeAFJAf8BAAH/ApoB9gF1AU0BmgH2AXUBGwkA
        AfEBEgG8RAABBwFQAZ4BeAJWATQELgEoAfID/wHwASgDLgE0AlYBeAGeAVABBwEAAv8BGgH2AXUBTQGa
        AfYBdQEbAQAB8wYZAfMBAAHxARIBvEQAAf8BSQKYAXgBVgFVBC4BKAFyA+wBcgEoAy4BVQFWAXgCmAFJ
        Af8BAAEaAXUB9gEaAU0BmgH2AXUBGwIAARkGCQEZAQAB8QESAbxFAAHwAUkBnwGYAXgBVgFPBC4FKAMu
        AU8BVgF4AZgBnwFJAfACAAFTAU0BdQH/ARoB/wF1ARsDAAEZBgkBGQEAAfEBEgG8RgAB9wFQAZ8BmAF4
        AZcBUAFPCC4BTwFQAZcBeAGYAZ8BUAH3AwABdQJNAXUB9gEaARsEAAHzBhkB8wEAAfEBEgG8RgAB/wHs
        AVACCAGYAXgBlwFQBk8BUAGXAXgBmAIIAVAB7AH/AwAB/wF1Ak0BdQH/DgAB8QESAewG9wHvQAAB/wH3
        AUkDCAGYAngElwJ4AZgDCAFJAfcB/wUAAf8BlAF1ARsPAAHzCBIB7EIAAfABSQFyBQgCmAUIAXIBSQHw
        CwAB/wEHAf8MAAH/AewHEgHwQwAB/wEHAUkBSgFzAZkBCALCAQgBmQFzAUoBSQEHAf8LAAH/Ae0BEgHq
        DesBbQYSAfcB/0UAAf8B8QEcAXIBSQIiAUkBcgEcAfEB/w4AAf8BBwHrERIB6gHsAfAB/z0AAUIBTQE+
        BwABPgMAASgDAAF4AwABHgMAAQEBAAEBBQAB4AEBFgAD/wEAAf8BgAEHAf4CAAEfAfAIAAH+AQABAQH8
        AgABDwHwCAAB/AIAAfwBAAEBAQcB8AgAAfACAAE8AQABAwHHAfAIAAHgAgABHAEAAQMBxwHwCAAB4AIA
        AR8BjwH/AccB8AgAAcACAAEPAYgBAAFHAfAIAAGAAgABBwGIAQABRwHwCAABgAIAAQcBiAEAAUcB8AsA
        AQMBiAEAAUcB8AsAAQMBjwH/AccB8AsAAQMBjwH3AccB8AsAAQMBjwEHAccB8AsAAQMBjgEHAccB8AsA
        AQMBjAEHAccB8AsAAQMBiAEHAccB8AsAAQMBkAEPAccB8AsAAQMB4AEPAccB8AsAAQMBgAEfAccB8AsA
        AQMBAAE/AccB8AsAAQIBAAF/AccB8AgAAYACAAEEAQABgAFHAfAIAAGAAgABBAEBAYABRwHwCAABwAIA
        AQwBAwGAAUcB8AgAAeACAAEcAQcBgAFHAfAIAAHgAgABHAEPAf8BwAkAAfACAAE+AR8B/wHACQAB/AIA
        Af8B4wH/AcAJAAH+AQABAQH/AcALAAH/AYABBwH/AeACAAEQCAAL
</value>
  </data>
</root>